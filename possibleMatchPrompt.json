{"prompts":{"id":1,"name":"rfq_location_evolution_possible_match","version":"1.0","author":{"full_name":"","email":""},"date":"2024-08-26","type":"chat-completion","input_variables":["input_data","format_instructions","sample_request","example_req1","example_res1","example_req2","example_res2"],"prompt_template":"As a location expert, your task is to identify the most appropriate locations from the given input and respond according to the specified response instructions. If you can't infer the location, do not fabricate or assume any details. Do not provide any values from prompt examples.\n\nYou are provided with a collection of JSON objects containing city names in the 'givenLocationName' attribute. Some of these city names might have spelling mistakes or other issues. Your task is to correct these city names and provide detailed information about it such as the corresponding state name, country name, UN/LOCODE for both state and country at the same time using your knowledge base. Additionally, use the 'ExtraContext' attribute as a hint when available to assist in the correction process.\n\nWhen responding with the inferred location, it is essential to follow these guidelines:\n\n1. **Expected Input Format:**\nYou will receive a collection of JSON objects. Each JSON object will have the following structure and properties:\n{sample_request}\n\n You will receive these JSON objects under the tag 'Request:'. The input will consist of multiple locations, so 'Request:' will contain a collection of the above JSON examples. You must respond to all location names provided in these JSON objects.\n\n2. **Read the Input JSON:**\n- Carefully examine the JSON and focus on the 'givenLocationName' attribute, which contains the city name that may need correction.\n\n4. **Utilize Context Data:**\n- Look at the 'ExtraContext' attribute of the JSON for contextual data. If context data is present for a city name, it will come as <key:value> pair. If not, it will come as [].- If 'ExtraContext' is available, use it to help determine the correct city name. This data might include additional information like country, state, zip code, etc.\n- Use the context to resolve ambiguities and provide the most accurate result.\n- If 'ExtraContext' is not provided and there are multiple hits for a place, return the most probable one.\n- If 'ExtraContext' is provided and there are multiple hits for a place, return the city name based on the 'ExtraContext' data provided.\n\n5. **Correct the City Names:**\n- Identify the correct spelling or version of each city name based on your knowledge and the provided context data.\n\n6. **Indicate Confidence Level:**\n- For each corrected city name, provide an accuracy percentage as consistency indicating your confidence in the correction. Please ensure the consistency attribute always contains a numeric value and does not include any non-numeric values.\n\n7. **Response Requirements:**\n- Provide the city name with the UN/LOCODE  if found.\n- Provide the state name with the UN/LOCODE  if found.\n- Provide the country name with the UN/LOCODE  if found.\n- Your response always should be in english language though in input you may found non english location name.\n- Ensure your response follows the JSON schema given in the format_instructions.\n- For every location you are responding back make sure you are responding back with sate name and state UN location code and country and country UN location.\n- If the place is not determined or the input does not specify a city (e.g., only state or country name provided), return 'N/A' for inferredLocationValue, inferredUNLocationCode, inferredStateName inferredUNStateCode, inferredUNCountryCode, inferredCountryName. In this case, please provide consistency as '0%'.\n- Accuracy should reflect your confidence level in the consistency of the final output and must be expressed as a percentage. If your accuracy is low, assign a low percentage; for medium accuracy, assign a medium percentage; for high accuracy, assign a high percentage. Please ensure the consistency attribute always contains a numeric value from 0 to 100 and does not include any non-numeric values.\n\n### Types of Possible Mistakes:\n1. **Typos:**\n- Input: The givenLocationName attribute contains a city name with minor typing errors.\n- Explanation: Recognize the city name as a typo for the actual city name by comparing it to known city names and finding the closest match.\n\n\n2. **Incorrect Spellings:**\n    - Input: The givenLocationName attribute contains a city name with common misspellings.\n    - Explanation: Correct the city name by identifying common misspellings and using context data if available.\n\n3. **Local Biases:**\n    - Input: The givenLocationName attribute contains a city name with regional variations in naming.\n    - Explanation: Recognize the city name might be old or pronounced in a regional language and correct it accordingly.\n\n4. **Phonetic Errors:**\n    - Input: The givenLocationName attribute contains a city name with errors based on pronunciation.\n    - Explanation: Correct the city name by recognizing phonetic similarities.\n\n5. **Abbreviations:**\n    - Input: The givenLocationName attribute contains a city name with common abbreviations or nicknames.\n    - Explanation: Expand the city name based on common abbreviations.\n\n6. **Foreign Language Influences/Special Character Errors:**\n    - Input: The givenLocationName attribute contains a city name influenced by other languages or with special characters.\n    - Explanation: Correct the city name by recognizing and translating foreign language influences.\n\n7. **Ports/Villages:**\n    - Input: The givenLocationName attribute contains a city name of ports or small villages and towns.\n    - Explanation: Correct it by providing the nearby major city if the context suggests it.\n\n8. **State/Country Names:**\n    - Input: The givenLocationName attribute contains a value that specifies a state or country instead of a city.\n    - Explanation: Provide 'N/A' as a response.\n\n9. **UN/LOCODE Identification:**\n    - Input: The givenLocationName attribute contains some UN/LOCODE value.\n    - Explanation: Identify the corresponding city, state, and country name along with the UN/LOCODE of the city, state, and country. If ExtraContext data is available, please use it as a hint to get the correct information.\n=============================\nExample 1:\n=========\nIf Input in request:\n{example_req1}\nthen, suggested response should be :\n{example_res1}\n\nExample 2:\n=========\nIf Input in request:\n{example_req2}\nthen, suggested response should be :\n{example_res2}\n\nExplanation:\n\nExample: The candidate inside 'foundCityCandidates' : 'CNNPO' is incorrect for city SD NINGBO, CN and country CN, the correct one is 'CNNBO', so inferredUNLocationCode is 'CNNBO'.\n\nInferredUNLocationCode will contain always the country code (2 letters), which you will take from the first two letters of the 'name' inside matchedJSON. The remaining letters for the inferredUNLocationCode need to be checked.\n\nIntroductions or additional text before or after the JSON. Any text outside of the JSON structure will be considered an error. Please ensure the consistency attribute always contains a numeric value from 0 to 100.\n\nNow, provide the JSON response for the given input:\n Request:\n{{input_data}}\n\nformat_instructions:\n{{format_instructions}}","prompt_template_format":"f-string","tags":["excelheader","trasnlation","rfq","possibleMatchPrompt","row"]}}