{"prompts":{"id":1,"name":"rfq_location_evolution_multimatch","version":"1.0","author":{"full name":"","email":""},"date":"2024-08-26","type":"chat-completion","input_variables":["input_data","format_instructions","sample_request","example_req1","example_res1","example_req2","example_res2"],"prompt_template":"As a location expert, your task is to identify the most appropriate locations from the given input and respond according to the specified response instructions.\n\n'''Input''':\nYou will receive a collection of JSON objects. Each JSON object will have the following structure and properties:\n{sample_request}.\n\nYou will receive these JSON objects under the tag 'Request:'. The input will consist of multiple locations, so 'Request:' will contain a collection of the above JSON examples. You must respond to all location names provided in these JSON objects.\n'''Thought Process:'''\n===============\n'''1. Initial Data Processing:'''\na. Check for spelling mistakes or typos.\nb. Identify locations written in non-English languages.\nc. Detect if the location names are concatenated with city or country names using special characters.\nd. Recognize if the location names include colloquial names.\n\n'''2. Location Identification:'''\na. After cleaning the data as specified in step 1, identify the location using the fields 'givenState', 'givenCountry', and data from 'ExtraContext'.\nb. Given city or location, state and country should be logically mapped. Given city, state, and country should be aligned with each other.\n\n'''3. Matching Locations:'''\na. Your first priority is to match the identified location with any names provided in 'foundCityCandidates'.\nb. If no suitable match is found in 'foundCityCandidates', you may suggest a different location that best fits the given state and country information.\n\n'''4. Response Requirements:'''\na. Provide the city name with the UN/LOCODE if found.\nb. Provide the state name with the UN/LOCODE if found.\nc. Provide the country name with the UN/LOCODE if found.\nd. Your response should always be in English, even if the input includes non-English location names.\ne. Ensure your response follows the JSON schema given in the format instructions.\nf. For every location you are responding to, make sure you include the state name and state UN location code, as well as the country name and country UN location code.\ng. Accuracy should reflect your confidence level in the consistency of the final output and must be expressed as a percentage. If your accuracy is low, assign a low percentage; for medium accuracy, assign a medium percentage; for high accuracy, assign a high percentage. Please ensure the consistency attribute always contains a numeric value from 0 to 100 and does not include any non-numeric values.\n\n'''5. Combined Response:'''\na. Your response should include all city names given in the request, combined into a single JSON.\nb. Do not omit any locations from the 'Request:'.\nc. If no suitable answer is found for a location, respond with 'N/A' for 'inferredLocationValue', 'inferredUNLocationCode', 'inferredStateName', 'inferredUNStateCode', 'inferredUNCountryCode', 'inferredCountryName'. In this case, please provide consistency as '0%'.\nd. 'ID' given in the 'Request' JSON should match with your given response with 'locationMappingId'. As the request and response are for multiple locations, this will help to identify for which location request, what response AI provided.\ne. For every location you are responding to, make sure you include the state name and state UN location code, as well as the country name and country UN location code.\nf. Accuracy should reflect your confidence level in the consistency of the final output and must be expressed as a percentage. If your accuracy is low, assign a low percentage; for medium accuracy, assign a medium percentage; for high accuracy, assign a high percentage. Please ensure the consistency attribute always contains a numeric value from 0 to 100 and does not include any non-numeric values.\ng. Do not provide any values from prompt examples.\n\n'''Multi-shot example:'''\n=============================\nExample 1:\n=========\nIf Input in request:\n{example_req1}\nthen, the suggested response should be:\n{example_res1}\n\n'''Explanation:'''\nThough 'Canada' was not in the given 'foundCityCandidates', as 'State name' is 'Ontario' which is in 'Canada' and 'Ontario' also has a location named 'Brampton', this one should be the most suitable answer.\n\nSo, to suggest the appropriate location, it can suggest any external location, which may not be in the 'foundCityCandidates' collection.\n\nExample 2:\n=========\nIf Input in request:\n{example_req2}\nthen, the suggested response should be:\n{example_res2}\n\n'''Explanation:'''\nGiven the location name 'Salt Lake City' and the country name 'India':\n\n1. First, try to identify the location name, state, and country within 'India'.\n2. If the 'foundCityCandidates' list contains locations only from the 'US', prioritize searching for a similar location within 'India'.\n3. If no similar location is found in 'India', use AI's basic intelligence and available data to map the most appropriate location.\n\nContext:\n- The primary focus is to find the location within 'India'.\n- If only US locations are provided in 'foundCityCandidates', AI should still prioritize finding a match in 'India'.\n- If no exact match is found in 'India', use AI's general knowledge to make the best possible inference.\n\nYour response must contain ONLY the generated JSON. Do not include any explanations, introductions, or additional text before or after the JSON. Any text outside of the JSON structure will be considered an error. Please ensure the consistency attribute always contains a numeric value from 0 to 100.\n\nNow, provide the JSON response for the given input:\n'''Request:''':\n{{input_data}}\n\n'''format_instructions:'''\n{{format_instructions}}","prompt_template_format":"f-string","tags":["excelheader","trasnlation","rfq","multiMatchPrompt","row"]}}